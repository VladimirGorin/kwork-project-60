import sqlite3 as sq

from aiogram import types

from config import db_path


async def main_reply():
    """
    –ì–ª–∞–≤–Ω–∞—è reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
    :return: Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞.
    """

    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(
        types.KeyboardButton(text='üí∞ –ë–∞–ª–∞–Ω—Å'),
        types.KeyboardButton(text='üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'),
        types.KeyboardButton(text='üõí –í–∞—à–∏ –ø—Ä–æ–¥—É–∫—Ç—ã'),
        types.KeyboardButton(text='‚úÖ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–µ–∫–ª–∞–º—É'),
        types.KeyboardButton(text='üí≥ –í—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤'),
        types.KeyboardButton(text='üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞')
    )
    return keyboard


async def main_inline(admin_tid):
    """
    –ì–ª–∞–≤–Ω–∞—è inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.
    :param admin_tid: Telegram id –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
    :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """

    keyboard = types.InlineKeyboardMarkup(row_width=1)
    buttons = [
        types.InlineKeyboardButton(callback_data='admin_users', text='–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏'),
        types.InlineKeyboardButton(callback_data='admin_mailing', text='–†–∞–∑–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞'),
        types.InlineKeyboardButton(callback_data='admin_start_message', text='–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞'),
        types.InlineKeyboardButton(callback_data='admin_auto-mailing', text='–ê–≤—Ç–æ-—Ä–∞—Å—Å—ã–ª–∫–∞')
    ]

    with sq.connect(db_path) as con:
        cur = con.cursor()
        admin_access_level = cur.execute('''
            select access_level from admins where t_id = ?
        ''', (admin_tid,)).fetchone()[0]

    if int(admin_access_level) == 1:
        buttons += [
            types.InlineKeyboardButton(callback_data='admin_admins', text='–ê–¥–º–∏–Ω—ã'),
            types.InlineKeyboardButton(callback_data='admin_balances', text='–ë–∞–ª–∞–Ω—Å—ã'),
            types.InlineKeyboardButton(callback_data='admin_products', text='–ü—Ä–æ–¥—É–∫—Ç—ã'),
            types.InlineKeyboardButton(callback_data='admin_stats', text='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'),
            types.InlineKeyboardButton(callback_data='admin_add_users', text='–î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'),
            types.InlineKeyboardButton(callback_data='admin_delete_users', text='–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'),
            types.InlineKeyboardButton(callback_data='autoscripts', text='–ê–≤—Ç–æ—Å—Ü–µ–Ω–∞—Ä–∏–∏')
        ]

    keyboard.add(*buttons)
    return keyboard


# –†–∞–∑–¥–µ–ª "–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞"
async def start_message():
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ä—Ç–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.
    :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞.
    """

    with sq.connect(db_path) as con:
        cur = con.cursor()
        status = cur.execute('''
            select status from start_message
        ''').fetchone()

    keyboard = types.InlineKeyboardMarkup(row_width=1)
    if status is not None and status[0] == 'Active':
        keyboard.add(types.InlineKeyboardButton(callback_data='deactivate_start_message', text='–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å ‚èπ'))
    elif status is not None and status[0] == 'Passive':
        keyboard.add(types.InlineKeyboardButton(callback_data='activate_start_message', text='–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å ‚ñ∂Ô∏è'))
    keyboard.add(
        types.InlineKeyboardButton(callback_data='admin_edit_start_message', text='–ò–∑–º–µ–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ'),
        types.InlineKeyboardButton(callback_data='admin_start_message_back', text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
    )
    return keyboard


# –†–∞–∑–¥–µ–ª "–ê–≤—Ç–æ-—Ä–∞—Å—Å—ã–ª–∫–∞"
async def auto_mailing():
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ-—Ä–∞—Å—Å—ã–ª–∫–æ–π.
    :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞.
    """

    keyboard = types.InlineKeyboardMarkup(row_width=1).add(
        types.InlineKeyboardButton(callback_data='admin_auto-mailing_add', text='–î–æ–±–∞–≤–∏—Ç—å ‚ûï'),
        types.InlineKeyboardButton(callback_data='admin_auto-mailing_delete', text='–£–¥–∞–ª–∏—Ç—å ‚ûñ'),
        types.InlineKeyboardButton(callback_data='admin_auto-mailing_back', text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
    )
    return keyboard


async def delete_auto_mailings(auto_mailings):
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–≤—Ç–æ-—Ä–∞—Å—Å—ã–ª–æ–∫.
    :param auto_mailings: –°–ø–∏—Å–æ–∫ —Å ID –∞–≤—Ç–æ-—Ä–∞—Å—Å—ã–ª–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.
    :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞.
    """

    keyboard = types.InlineKeyboardMarkup(row_width=5)
    buttons = []

    for admin_tid in auto_mailings:
        buttons.append(
            types.InlineKeyboardButton(callback_data=f'admin_delete_auto-mailing_{admin_tid}',
                                       text=str(auto_mailings.index(admin_tid) + 1))
        )

    keyboard.add(*buttons)
    keyboard.add(types.InlineKeyboardButton(callback_data='admin_delete_auto-mailings_back', text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥'))
    return keyboard


async def totally_delete_auto_mailing(auto_mailing_id):
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Å—Ç–∞—Ç–æ—á–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∞–≤—Ç–æ-—Ä–∞—Å—Å—ã–ª–∫–∏.
    :param auto_mailing_id: Id –∞–≤—Ç–æ-—Ä–∞—Å—Å—ã–ª–∫–∏, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏–º —É–¥–∞–ª–∏—Ç—å.
    :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞.
    """

    keyboard = types.InlineKeyboardMarkup(row_width=2).add(
        types.InlineKeyboardButton(callback_data=f'admin_totally_delete_auto-mailing_{auto_mailing_id}',
                                   text='–£–¥–∞–ª–∏—Ç—å ‚ùå'),
        types.InlineKeyboardButton(callback_data='admin_totally_deleting_auto-mailing_back',
                                   text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
    )
    return keyboard


# –†–∞–∑–¥–µ–ª "–ê–¥–º–∏–Ω—ã"
async def admins_main():
    """
    –ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–∞–∑–¥–µ–ª–∞ "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã".
    :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """

    keyboard = types.InlineKeyboardMarkup(row_width=1).add(
        types.InlineKeyboardButton(callback_data='admin_admins_add', text='–î–æ–±–∞–≤–∏—Ç—å ‚ûï'),
        types.InlineKeyboardButton(callback_data='admin_admins_delete', text='–£–¥–∞–ª–∏—Ç—å ‚ûñ'),
        types.InlineKeyboardButton(callback_data='admin_admins_back', text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
    )
    return keyboard


async def delete_admins(admins):
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–≤.
    :param admins: –°–ø–∏—Å–æ–∫ —Å telegram id –∞–¥–º–∏–Ω–æ–≤, –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.
    :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞.
    """

    keyboard = types.InlineKeyboardMarkup(row_width=5)
    buttons = []

    for admin_tid in admins:
        buttons.append(
            types.InlineKeyboardButton(callback_data=f'admin_delete_admin_{admin_tid}',
                                       text=str(admins.index(admin_tid) + 1))
        )

    keyboard.add(*buttons)
    keyboard.add(types.InlineKeyboardButton(callback_data='admin_delete_admins_back', text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥'))
    return keyboard


async def admin_levels():
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –ø—Ä–∏ –µ–≥–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏.
    :return: Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞.
    """

    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2).add(
        types.KeyboardButton(text='1'),
        types.KeyboardButton(text='2'),
        types.KeyboardButton(text='–û—Ç–º–µ–Ω–∞ ‚úñÔ∏è')
    )
    return keyboard


# –†–∞–∑–¥–µ–ª "–ë–∞–ª–∞–Ω—Å—ã"
async def edit_balances(users):
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å.
    :param users: –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å.
    :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞.
    """

    keyboard = types.InlineKeyboardMarkup(row_width=5)
    buttons = []

    for user_tid in users:
        buttons.append(
            types.InlineKeyboardButton(callback_data=f'admin_edit_balance_{user_tid}',
                                       text=str(users.index(user_tid) + 1))
        )

    keyboard.add(*buttons)
    return keyboard


# –†–∞–∑–¥–µ–ª "–ü—Ä–æ–¥—É–∫—Ç—ã"
async def products_main():
    keyboard = types.InlineKeyboardMarkup(row_width=1).add(
        types.InlineKeyboardButton(callback_data='admin_products_add', text='–î–æ–±–∞–≤–∏—Ç—å ‚ûï'),
        types.InlineKeyboardButton(callback_data='admin_products_delete', text='–£–¥–∞–ª–∏—Ç—å ‚ûñ'),
        types.InlineKeyboardButton(callback_data='admin_products_back', text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
    )
    return keyboard


async def delete_products(stats):
    keyboard = types.InlineKeyboardMarkup(row_width=5)
    buttons = []

    for stat_id in stats:
        buttons.append(
            types.InlineKeyboardButton(callback_data=f'admin_delete_product_{stat_id}',
                                       text=str(stats.index(stat_id) + 1))
        )

    keyboard.add(*buttons)
    keyboard.add(types.InlineKeyboardButton(callback_data='admin_delete_products_back', text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥'))
    return keyboard


async def totally_delete_product(stat_id):
    keyboard = types.InlineKeyboardMarkup(row_width=2).add(
        types.InlineKeyboardButton(callback_data=f'admin_totally_delete_product_{stat_id}',
                                   text='–£–¥–∞–ª–∏—Ç—å ‚ùå'),
        types.InlineKeyboardButton(callback_data='admin_totally_deleting_product_back',
                                   text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
    )
    return keyboard


# –†–∞–∑–¥–µ–ª "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"
async def stats_main():
    """
    –ì–ª–∞–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–∞–∑–¥–µ–ª–∞ "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞".
    :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞.
    """

    keyboard = types.InlineKeyboardMarkup(row_width=1).add(
        types.InlineKeyboardButton(callback_data='admin_stats_add', text='–î–æ–±–∞–≤–∏—Ç—å ‚ûï'),
        types.InlineKeyboardButton(callback_data='admin_stats_delete', text='–£–¥–∞–ª–∏—Ç—å ‚ûñ'),
        types.InlineKeyboardButton(callback_data='admin_stats_back', text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
    )
    return keyboard


async def delete_stats(stats):
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.
    :param stats: –°–ø–∏—Å–æ–∫ —Å ID —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å.
    :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞.
    """

    keyboard = types.InlineKeyboardMarkup(row_width=5)
    buttons = []

    for stat_id in stats:
        buttons.append(
            types.InlineKeyboardButton(callback_data=f'admin_delete_stat_{stat_id}',
                                       text=str(stats.index(stat_id) + 1))
        )

    keyboard.add(*buttons)
    keyboard.add(types.InlineKeyboardButton(callback_data='admin_delete_stats_back', text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥'))
    return keyboard


async def totally_delete_stat(stat_id):
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Å—Ç–∞—Ç–æ—á–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.
    :param stat_id: Id –∞–≤—Ç–æ-—Ä–∞—Å—Å—ã–ª–∫–∏, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–∏–º —É–¥–∞–ª–∏—Ç—å.
    :return: Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞.
    """

    keyboard = types.InlineKeyboardMarkup(row_width=2).add(
        types.InlineKeyboardButton(callback_data=f'admin_totally_delete_stat_{stat_id}',
                                   text='–£–¥–∞–ª–∏—Ç—å ‚ùå'),
        types.InlineKeyboardButton(callback_data='admin_totally_deleting_stat_back',
                                   text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥')
    )
    return keyboard


def autoscripts():
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    keyboard.add(types.InlineKeyboardButton(callback_data='add_subscribers', text='–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤'))
    keyboard.add(types.InlineKeyboardButton(callback_data='add_balances', text='–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –±–∞–ª–∞–Ω—Å–æ–≤'))
    return keyboard


async def get_admins_second_level():
    keyboard = types.InlineKeyboardMarkup(row_width=1)
    sql = ('select a.t_id, COALESCE(u.username, first_name, u.t_id) '
           'from admins a inner join users u on a.t_id = u.t_id where access_level = 2')
    with sq.connect(db_path) as con:
        cur = con.cursor()
        admins = cur.execute(sql).fetchall()
        for user_id, username in admins:
            keyboard.add(
                types.InlineKeyboardButton(callback_data=f'choice_admin_{user_id}', text=username)
            )
    return keyboard